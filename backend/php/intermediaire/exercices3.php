<?php
// Exercice 1
echo "<h2>Exercice 1</h2>";
// The first loop makes the rows
for ($i=1; $i < 9 ; $i++) {
  // For each row the second loop makes the cells
  for ($j=1; $j < 9; $j++) {
    // According to the position on the board it is either white or black
    if (($i+$j)%2===0) {
      echo "#";
    } else {
      echo "O";
    }
  }
  // Go to the line at the end of each row
  echo "<br>";
}

// Shorter version with ternary operator
// for ($i=1; $i < 9 ; $i++) {
//   for ($j=1; $j < 9; $j++) {
//     echo ($i+$j)%2===0 ? "#" : "O";
//   }
//   echo "<br>";
// }

// Exercice 2
echo "<h2>Exercice 2</h2>";
for ($i=0; $i < 4; $i++) {
  for ($j=0; $j < 4; $j++) {
    echo $i===$j ? 1 : 0;
    echo "<br>";
  }
  echo "----------<br>";
}

// Exercice 3
echo "<h2>Exercice 3</h2>";
// No return value specified because big numbers are in scientific notation
function factorial(int $number) {
  // The minimum result is 1 not 0
  $result = 1;
  // For each number from one to the argument we multiply the result by that number
  for ($i=1; $i <= $number; $i++) {
    $result *= $i;
  }
  return $result;
}

echo factorial(25);

// Exercice 4
echo "<h2>Exercice 4</h2>";
// We store the words in an array to have access to indexes
$words = ["car", "boat", "toy", "green", "big", "super", "game", "computer"];
// Get the word at the index generated by the rand function between 0 and the last index
$playerChoice = $words[rand(0, count($words)-1)];
$computeurChoice;
$turn = 0;
echo "Player one choose the word : $playerChoice<br>";

// Easy version
// As long the computer does not guess right
while ($computeurChoice !== $playerChoice) {
  // As for player, the computer choose a word at a random index
  $computeurChoice = $words[rand(0, count($words)-1)];
  // We add one turn to the game
  $turn ++;
  echo "Turn $turn, computeur says : $computeurChoice<br>";
}

// Harder version
// while ($computeurChoice !== $playerChoice) {
//   // Choose a random index
//   $index = rand(0, count($words)-1);
//   $computeurChoice = $words[$index];
//   // Delete the value at this specific index in the array of words
//   unset($words[$index]);
//   // Reorder the remaining indexes to avoid blanck choices
//   $words = array_values($words);
//   $turn ++;
//   echo "Turn $turn, computeur says : $computeurChoice<br>";
// }

// Exercice 5
echo "<h2>Exercice 5</h2>";
$factory = [
  "location" => "Rouen",
  "name" => "Car factory",
  "employees" => 1246,
  "creation" => 1954,
  "product" => "cars",
  "models" => [
    [
      "model" => "Clio",
      "price" => 12000,
      "colors" => "black/white/red/green"
    ],
    [
      "model" => "Astra",
      "price" => 14000,
      "colors" => "black/white/red"
    ],
    [
      "model" => "Panda",
      "price" => 9000,
      "colors" => "black/white/red/yellow"
    ],
    [
      "model" => "Yaris",
      "price" => 15000,
      "colors" => "black/white/red/green/yellow/blue"
    ]
  ]
];

// Display the introduction sentence
echo "The " . $factory['name'] . " in " . $factory['location'] . " products the following models :<br>";

// We do not loop on $factory but on index "model" in $factory because it contains the array of models
foreach ($factory["models"] as $model) {
  // For each model we go trough each pair key/value
  foreach ($model as $key => $value) {
    // Exeption for color that requires some transformations
    if ($key === "colors") {
      // Make an array of the string so that we can count the items
      $colors = explode("/", $value);
      echo strtoupper($key) . " : " . count($colors) . " colors available<br>";
    } else {
      echo strtoupper($key) . " : " . $value . "<br>";
    }
  }
  echo "--------------<br>";
}
